<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>お気に入り</title>
    <link rel="stylesheet" href="/css/wakamusic.css">
    <link rel="stylesheet" href="/css/slide.css">
</head>
<body>
<header>
    <div class="search-container">
        <h1>お気に入りの曲</h1>
    </div>
    <p>
      &copy; わかめ02 / 2024
  </p>
    <button id="save-btn" class="save-load-btn">セーブ</button>
    <button id="load-btn" class="save-load-btn">ロード</button>
</header>

<main>
    <% if (tracks && tracks.length > 0) { %>
        <ul>
            <% tracks.forEach(track => { %>
                <li>
                    <img src="<%= track.artwork_url %>" alt="Artwork">
                    <div class="track-info">
                        <p class="track-title"><%= track.title %></p>
                        <p class="track-artist">お気に入り</p>
                    </div>
                    <button class="favorite-btn" data-id="<%= track.id %>" onclick="toggleFavorite('<%= track.artwork_url %>', '<%= track.title %>', '<%= track.id %>')">❤️</button>
                    <button class="play-btn" data-track-id="<%= track.id %>">Play</button>
                </li>
            <% }) %>
        </ul>
    <% } else { %>
        <p>お気に入り登録された曲はありません</p>
    <% } %>
</main>
  
<div class="player-bar" id="player-bar">
    <iframe id="sc-player" scrolling="no" frameborder="no"></iframe>
</div>

<script>
function getFavoritesFromCookies() {
    const cookieName = 'wakamemusicfavorites';
    const cookieValue = document.cookie.split('; ').find(row => row.startsWith(cookieName));
    
    if (cookieValue) {
        try {
            return JSON.parse(decodeURIComponent(cookieValue.split('=')[1]));
        } catch (error) {
            console.error('Error parsing favorites cookie:', error);
            return [];
        }
    }
    return [];
}

// Cookieにデータを保存する関数
function setCookie(name, value, days) {
    let expires = "";
    if (days) {
        const date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "") + expires + "; path=/";
}

// お気に入りボタンを更新する関数
function updateFavoriteButton(trackId) {
    const favorites = getFavoritesFromCookies();
    const favoriteBtn = document.querySelector(`button[data-id='${trackId}']`);

    if (favorites.some(track => track.id === trackId)) {
        favoriteBtn.classList.add('active');
    } else {
        favoriteBtn.classList.remove('active');
    }
}

// お気に入りの追加・解除処理
function toggleFavorite(artwork_url, title, id) {
    let favorites = getFavoritesFromCookies();

    const favoriteIndex = favorites.findIndex(track => track.id === id);

    if (favoriteIndex === -1) {
        favorites.push({ artwork_url, title, id });
        alert('お気に入りに追加しました！');
    } else {
        favorites.splice(favoriteIndex, 1);
        alert('お気に入りを解除しました！');
    }

    // Cookieにデータを保存
    setCookie('wakamemusicfavorites', JSON.stringify(favorites), 365);
    updateFavoriteButton(id);
}

// セーブボタンのクリックイベント
document.getElementById('save-btn').addEventListener('click', function() {
    alert("セーブコードを表示するページを開きます");
    window.open('/wakamc/f', '_blank');  // 新しいタブでセーブページを開く
});

// ロードボタンのクリックイベント
document.getElementById('load-btn').addEventListener('click', function() {
    const userInput = prompt("お気に入りデータを入力してください (JSON形式):");
    if (userInput) {
        try {
            const parsedData = JSON.parse(userInput);
            setCookie('wakamemusicfavorites', JSON.stringify(parsedData), 7);
            alert("Cookieに保存されました");
        } catch (e) {
            alert("無効なデータです。正しいJSON形式で入力してください。");
        }
    }
});

// お気に入りボタンの状態をページロード時に更新
document.querySelectorAll('.favorite-btn').forEach(btn => {
    const trackId = btn.getAttribute('data-id');
    updateFavoriteButton(trackId);
});

</script>
</body>
</html>
